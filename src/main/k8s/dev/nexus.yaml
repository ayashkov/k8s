---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  namespace: dev
  name: nexus
spec:
  storageClassName: do-block-storage
  accessModes:
    - ReadWriteOnce
  volumeMode: Filesystem
  resources:
    requests:
      storage: 5Gi

---
kind: Deployment
apiVersion: apps/v1
metadata:
  namespace: dev
  name: nexus
  labels:
    app: nexus
spec:
  selector:
    matchLabels:
      app: nexus
  template:
    metadata:
      labels:
        app: nexus
    spec:
      volumes:
      - name: nexus
        persistentVolumeClaim:
          claimName: nexus
      initContainers:
      - name: nexus-data-init
        image: alpine:3.9.5
        volumeMounts:
        - mountPath: "/nexus-data"
          name: nexus
        command: ["chown", "200:200", "/nexus-data"]
      containers:
      - name: nexus
        image: sonatype/nexus3:3.20.1
        volumeMounts:
        - mountPath: "/nexus-data"
          name: nexus
        env:
        - name: INSTALL4J_ADD_VM_PARAMS
          value: "-Xms512m -Xmx1200m -XX:MaxDirectMemorySize=2g -Djava.util.prefs.userRoot=${NEXUS_DATA}/javaprefs"
        ports:
        - containerPort: 8081
  replicas: 1

---
kind: Service
apiVersion: v1
metadata:
  namespace: dev
  name: repo
  labels:
    app: nexus
spec:
  type: ClusterIP
  selector:
    app: nexus
  ports:
  - name: http
    protocol: TCP
    port: 80
    targetPort: 8081

---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  namespace: dev
  name: repo
  labels:
    app: nexus
  annotations:
    kubernetes.io/ingress.class: "nginx"
    cert-manager.io/cluster-issuer: "lets-encrypt-prod"
spec:
  tls:
  - hosts:
    - repo.dev.yashkov.org
    secretName: repo-dev-yashkov-org-ingress
  rules:
  - host: repo.dev.yashkov.org
    http:
      paths:
      - path: /
        backend:
          serviceName: repo
          servicePort: 80

---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  namespace: dev
  name: jenkins-home
spec:
  storageClassName: do-block-storage
  accessModes:
    - ReadWriteOnce
  volumeMode: Filesystem
  resources:
    requests:
      storage: 2Gi

---
kind: Deployment
apiVersion: apps/v1
metadata:
  namespace: dev
  name: jenkins-master
  labels:
    app: jenkins
    role: master
spec:
  selector:
    matchLabels:
      app: jenkins
      role: master
  template:
    metadata:
      labels:
        app: jenkins
        role: master
    spec:
      serviceAccountName: jenkins
      volumes:
      - name: jenkins-home
        persistentVolumeClaim:
          claimName: jenkins-home
      initContainers:
      - name: jenkins-home-init
        image: alpine:3.9.5
        volumeMounts:
        - mountPath: "/var/jenkins_home"
          name: jenkins-home
        command: ["chown", "1000:1000", "/var/jenkins_home"]
      containers:
      - name: jenkins-master
        image: jenkins/jenkins:2.319.2-jdk11
        env:
        - name: JAVA_TOOL_OPTIONS
          value: "-XX:MaxRAMPercentage=75"
        volumeMounts:
        - mountPath: "/var/jenkins_home"
          name: jenkins-home
        ports:
        - containerPort: 8080
        - containerPort: 50000
        readinessProbe:
          httpGet:
            path: /login
            port: 8080
        resources:
          requests:
            cpu: 50m
            memory: 800Mi
          limits:
            cpu: 500m
            memory: 800Mi
  replicas: 1

---
kind: Service
apiVersion: v1
metadata:
  namespace: dev
  name: jenkins
  labels:
    app: jenkins
spec:
  type: ClusterIP
  selector:
    app: jenkins
    role: master
  ports:
  - name: http
    protocol: TCP
    port: 80
    targetPort: 8080
  - name: tunnel
    protocol: TCP
    port: 50000
    targetPort: 50000

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  namespace: dev
  name: jenkins
  labels:
    app: jenkins
  annotations:
    kubernetes.io/ingress.class: "nginx"
    cert-manager.io/cluster-issuer: "lets-encrypt-prod"
spec:
  tls:
  - hosts:
    - jenkins.dev.yashkov.org
    secretName: jenkins-dev-yashkov-org-ingress
  rules:
  - host: jenkins.dev.yashkov.org
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: jenkins
            port:
              number: 80

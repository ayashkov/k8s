---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  namespace: dev
  name: registry
spec:
  storageClassName: do-block-storage
  accessModes:
    - ReadWriteOnce
  volumeMode: Filesystem
  resources:
    requests:
      storage: 1Gi

---
kind: ConfigMap
apiVersion: v1
metadata:
  namespace: dev
  name: registry
data:
  config.yml: |
    version: 0.1
    log:
      accesslog:
        disabled: true
      level: info
      formatter: text
      fields:
        service: registry
        environment: production
    storage:
      filesystem:
        rootdirectory: /var/lib/registry
        maxthreads: 100
      cache:
        blobdescriptor: inmemory
      delete:
        enabled: true
      redirect:
        disable: true
      maintenance:
        uploadpurging:
          enabled: true
          age: 168h
          interval: 24h
          dryrun: false
        readonly:
          enabled: false
    auth:
      htpasswd:
        realm: registry
        path: /etc/docker/registry/htpasswd
    http:
      addr: :5000
      headers:
        X-Content-Type-Options: [nosniff]
    health:
      storagedriver:
        enabled: true
        interval: 10s
        threshold: 3

---
kind: Deployment
apiVersion: apps/v1
metadata:
  namespace: dev
  name: registry
  labels:
    app: registry
spec:
  selector:
    matchLabels:
      app: registry
  template:
    metadata:
      labels:
        app: registry
    spec:
      volumes:
      - name: config
        projected:
          sources:
          - configMap:
              name: registry
          - secret:
              name: registry-htpasswd
      - name: registry
        persistentVolumeClaim:
          claimName: registry
      containers:
      - name: registry
        image: registry:2.7.1
        volumeMounts:
        - mountPath: "/etc/docker/registry"
          name: config
        - mountPath: "/var/lib/registry"
          name: registry
        ports:
        - containerPort: 5000
  replicas: 1

---
kind: Service
apiVersion: v1
metadata:
  namespace: dev
  name: registry
  labels:
    app: registry
spec:
  type: ClusterIP
  selector:
    app: registry
  ports:
  - name: http
    protocol: TCP
    port: 80
    targetPort: 5000

---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  namespace: dev
  name: registry
  labels:
    app: registry
  annotations:
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/proxy-body-size: "0"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "600"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "600"
spec:
  rules:
  - host: registry.dev.yashkov.org
    http:
      paths:
      - path: /
        backend:
          serviceName: registry
          servicePort: 80
